swagger: "2.0"
info:
  description: "This is a TODO sample server"
  version: "1.0.0"
  title: "Swagger TODO"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:3001"
basePath: "/api"
schemes:
- "http"
paths:
  /todos:
    get:
      summary: "Task list"
      operationId: "getasks"
      produces:
      - "application/json"
      parameters:
      - in: query
        name: "status"
        type: string
        enum: [ completed, uncompleted, all ]
        default: 'all'
        description: "Filter TODO list by status"
      responses:
        "200":
          description: "Task list"
          schema:
            type: array
            items:
              $ref: "#/definitions/Task"
          x-pm-test:
            - plugins:
              - name: testSchema

        "400":
          description: Bad request
          schema:
            $ref:  "#/definitions/Error"
          x-pm-test:
            - params:
              - name: status
                in: query
                value: aaaa

        "default":
          description: Internal server error
          schema:
            $ref:  "#/definitions/Error"

    post:
      summary: "Add a new task"
      operationId: "addTask"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "task"
        description: "Task object that needs to be added to the TODO list"
        required: true
        schema:
          required:
            - todo
          properties:
            todo:
              type: string
              description: Task description
      responses:
        "201":
          description: "Task created"
          schema:
            description: "Created task"
            $ref: "#/definitions/Task"
        "400":
          description: Bad request
          schema:
            $ref:  "#/definitions/Error"

        "default":
          description: Internal server error
          schema:
            $ref:  "#/definitions/Error"

  /todos/{id}:
    get:
      summary: "Get task by ID"
      operationId: "getTask"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Task id"
        required: true
        type: string
        minLength: 24
        maxLength: 24
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Task"
        "400":
          description: Bad request
          schema:
            $ref:  "#/definitions/Error"
        "404":
          description: Not found
          schema:
            $ref:  "#/definitions/Error"

        "default":
          description: Internal server error
          schema:
            $ref:  "#/definitions/Error"


    patch:
      summary: "Update an existing task"
      operationId: "updateTask"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Task id"
        required: true
        type: string
        minLength: 24
        maxLength: 24
      - in: "body"
        name: "task"
        description: "Task object that needs to be updated to the TODO"
        required: true
        schema:
          properties:
            todo:
              type: string
            completed:
              type: boolean
      responses:
        "200":
          description: "successful operation"
          schema:
            description: "Updated task"
            $ref: "#/definitions/Task"
        "400":
          description: Bad request
          schema:
            $ref:  "#/definitions/Error"
        "404":
          description: Not found
          schema:
            $ref:  "#/definitions/Error"

        "default":
          description: Internal server error
          schema:
            $ref:  "#/definitions/Error"


    delete:
      summary: "Delete task by ID"
      operationId: "deleteTask"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Task id"
        required: true
        type: string
        minLength: 24
        maxLength: 24
      responses:
        "204":
          description: "successful operation"
          schema:
            type: object
            properties:
              id:
                type: string
                description: ID of the deleted item
        "400":
          description: Bad request
          schema:
            $ref:  "#/definitions/Error"
        "404":
          description: Not found
          schema:
            $ref:  "#/definitions/Error"

        "default":
          description: Internal server error
          schema:
            $ref:  "#/definitions/Error"


definitions:
  Task:
    description: Task
    required:
      - todo
      - completed
      - created
    properties:
      id:
        type: string
        readOnly: true
        description: Task ID
      todo:
        type: string
        description: Task description
      completed:
        type: boolean
        description: Is completed
      created:
        type: string
        format: date-time

  Error:
    description: Error message
    required:
      - status
      - message
    properties:
      status:
        type: boolean
      message:
        type: string